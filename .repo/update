#!/usr/bin/bash
# set -eou pipefail

if [[ -z "${1}" ]]; then
	echo "Usage: ${0} [REPO]"
	exit 1
fi

prefix=$(dirname "${0}")
cd "${prefix}/${1}"
svn info . | grep "Revision" | awk '{print $2}' > .last_revision
svn up > .update.tmp
cat .update.tmp

# revert(){
#     svn update -r $(cat .last_revision)
# }
# trap revert ERR

updated_packages=$(grep '/trunk/' .update.tmp |sed -En 's| ?[AUCGER]+ {3,4}(.+)/trunk/.+|\1|p'|uniq)
for pkgbase in $updated_packages; do
	files=$(grep "${pkgbase}/trunk/" .update.tmp |sed -En 's| ?[AUCGER]+ {3,4}.+/trunk/(.+)|\1|p')
	echo "$pkgbase"
	for file in $files; do
		echo "    ${file}"
		if ! cmp "${pkgbase}/trunk/${file}" "../../${pkgbase}/${file}" &>/dev/null ; then
			cp "${pkgbase}/trunk/${file}" "../../${pkgbase}"
			git add "../../${pkgbase}/${file}"
		fi
	done
	deleted_files=$(grep "${pkgbase}/trunk/" .update.tmp |sed -En 's| ?[D]+ {3,4}.+/trunk/(.+)|\1|p')
	for file in $deleted_files; do
		echo "    Deleted: ${file}"
		rm "../../${pkgbase}/${file}"
		git add "../../${pkgbase}/${file}"
	done
	pushd "$pkgbase/trunk" &> /dev/null
	makepkg --printsrcinfo > "../../../../${pkgbase}/.SRCINFO"
	git add "../../../../${pkgbase}/.SRCINFO"
	popd &> /dev/null
	svn_log=$(svn log -l 1 "${pkgbase}/trunk"|head -n-1|tail -n-2)
	git commit -v "../../${pkgbase}" --template <(printf "\n%s" "$svn_log")
done
rm .update.tmp
